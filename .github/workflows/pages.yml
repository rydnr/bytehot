name: Deploy GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
            
      - name: Build project and generate JavaDocs
        run: |
          mvn clean compile javadoc:aggregate -B
          
      - name: Convert Org files to HTML
        run: |
          # Create HTML versions of org files
          mkdir -p docs/generated
          
          # Function to convert org file to HTML
          convert_org_to_html() {
            local org_file="$1"
            local html_file="${org_file%.org}.html"
            
            # Simple org to HTML conversion
            cat > "$html_file" << 'EOF'
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ByteHot - Documentation</title>
    <style>
        body {
            font-family: 'Courier New', monospace;
            background: linear-gradient(135deg, #0f0f23 0%, #1a1a3a 100%);
            color: #00ff00;
            line-height: 1.6;
            margin: 0;
            padding: 2rem;
        }
        .container {
            max-width: 1000px;
            margin: 0 auto;
            background: rgba(26, 26, 58, 0.8);
            padding: 3rem;
            border-radius: 12px;
            border: 2px solid #00ff00;
        }
        h1, h2, h3 { color: #00cccc; text-shadow: 0 0 10px #00cccc; }
        h1 { font-size: 2.5rem; margin-bottom: 2rem; text-align: center; }
        pre {
            background: #000;
            border: 1px solid #00ff00;
            border-radius: 6px;
            padding: 1rem;
            overflow-x: auto;
            color: #00ff00;
        }
        code {
            background: rgba(0, 255, 0, 0.1);
            padding: 0.2rem 0.4rem;
            border-radius: 3px;
            color: #00ff00;
        }
        a {
            color: #00cccc;
            text-decoration: none;
        }
        a:hover {
            text-shadow: 0 0 10px #00cccc;
        }
        .nav-back {
            display: inline-block;
            margin-bottom: 2rem;
            padding: 0.5rem 1rem;
            background: rgba(0, 255, 0, 0.1);
            border: 1px solid #00ff00;
            border-radius: 4px;
        }
    </style>
</head>
<body>
    <div class="container">
        <a href="index.html" class="nav-back">‚Üê Back to Home</a>
        <div class="content">
EOF
            
            # Convert org content to basic HTML
            sed -e 's/^#+TITLE: \(.*\)/<h1>\1<\/h1>/' \
                -e 's/^#+AUTHOR: \(.*\)/<p><em>Author: \1<\/em><\/p>/' \
                -e 's/^#+DATE: \(.*\)/<p><em>Date: \1<\/em><\/p>/' \
                -e 's/^\* \(.*\)/<h2>\1<\/h2>/' \
                -e 's/^\*\* \(.*\)/<h3>\1<\/h3>/' \
                -e 's/^\*\*\* \(.*\)/<h4>\1<\/h4>/' \
                -e 's/^- \(.*\)/<li>\1<\/li>/' \
                -e 's/~\([^~]*\)~/<code>\1<\/code>/g' \
                -e 's/\[\[\([^]]*\)\]\[\([^]]*\)\]\]/<a href="\1">\2<\/a>/g' \
                -e 's/^#+BEGIN_SRC.*/<pre><code>/' \
                -e 's/^#+END_SRC/<\/code><\/pre>/' \
                -e 's/^$/<br>/' \
                "$org_file" >> "$html_file"
            
            cat >> "$html_file" << 'EOF'
        </div>
    </div>
</body>
</html>
EOF
          }
          
          # Convert all org files in docs directory
          find docs -name "*.org" -type f | while read -r org_file; do
            echo "Converting $org_file"
            convert_org_to_html "$org_file"
          done
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Prepare site directory
        run: |
          mkdir -p _site
          
          # Copy docs content
          cp -r docs/* _site/
          
          # Copy JavaDocs if they exist
          if [ -d "target/site/apidocs" ]; then
            mkdir -p _site/javadocs
            cp -r target/site/apidocs/* _site/javadocs/
          fi
          
          # Ensure index.html is present
          if [ ! -f "_site/index.html" ]; then
            echo "Error: index.html not found in _site directory"
            ls -la _site/
            exit 1
          fi
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4