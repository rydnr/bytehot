name: Build and Deploy Documentation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 2 AM UTC to keep documentation fresh
    - cron: '0 2 * * *'

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper git operations

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Install Pandoc
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc

      - name: Verify Pandoc installation
        run: pandoc --version

      - name: Build project and install dependencies
        run: |
          # Build and install the multi-module project from root
          mvn clean install -DskipTests -q

      - name: Generate Javadocs
        run: |
          # Generate Javadocs using multiple approaches
          echo "üîß Attempting to generate Javadocs..."
          
          # Create javadocs directory
          mkdir -p bytehot/target/site/apidocs
          
          # Strategy 1: Try Maven with relaxed settings
          echo "üìã Strategy 1: Maven javadoc plugin with relaxed settings..."
          mvn javadoc:javadoc -pl bytehot \
            -DfailOnError=false \
            -Dadditionalparam="-Xdoclint:none" \
            -Dmaven.javadoc.skip=false \
            -Dquiet=false \
            -X | head -50 || echo "Maven javadoc approach 1 failed"
          
          # Strategy 2: Try Maven aggregate
          if [ ! -d "bytehot/target/site/apidocs" ] || [ -z "$(ls -A bytehot/target/site/apidocs 2>/dev/null)" ]; then
            echo "üìã Strategy 2: Maven aggregate javadoc..."
            mvn javadoc:aggregate -DfailOnError=false -Dadditionalparam="-Xdoclint:none" || echo "Maven aggregate failed"
            
            # Move aggregate docs if they exist
            if [ -d "target/site/apidocs" ]; then
              mkdir -p bytehot/target/site/
              mv target/site/apidocs bytehot/target/site/apidocs
              echo "‚úÖ Moved aggregate javadocs to bytehot/target/site/apidocs"
            fi
          fi
          
          # Strategy 3: Direct javadoc command
          if [ ! -d "bytehot/target/site/apidocs" ] || [ -z "$(ls -A bytehot/target/site/apidocs 2>/dev/null)" ]; then
            echo "üìã Strategy 3: Direct javadoc command..."
            
            # Build classpath from Maven
            cd bytehot
            echo "Building classpath..."
            CLASSPATH=$(mvn dependency:build-classpath -Dmdep.outputFile=/dev/stdout -q 2>/dev/null | tail -1)
            echo "Classpath length: ${#CLASSPATH}"
            cd ..
            
            # Generate Javadocs directly
            echo "Running direct javadoc command..."
            javadoc -d bytehot/target/site/apidocs \
              -sourcepath bytehot/src/main/java \
              -classpath "bytehot/target/classes:$CLASSPATH" \
              -subpackages org.acmsl.bytehot \
              -windowtitle "ByteHot API Documentation" \
              -doctitle "ByteHot - JVM Bytecode Hot-Swapping Agent" \
              -header "ByteHot v1.0" \
              -bottom "Copyright ¬© 2025 ByteHot Project. Licensed under GPL v3." \
              -use -version -author \
              -Xdoclint:none \
              -quiet || echo "Direct javadoc also failed"
          fi
          
          # Strategy 4: Alternative Maven approach without parent config
          if [ ! -d "bytehot/target/site/apidocs" ] || [ -z "$(ls -A bytehot/target/site/apidocs 2>/dev/null)" ]; then
            echo "üìã Strategy 4: Alternative Maven approach..."
            cd bytehot
            mvn org.apache.maven.plugins:maven-javadoc-plugin:3.10.0:javadoc \
              -DfailOnError=false \
              -Ddoclint=none \
              -Dquiet=false || echo "Alternative Maven approach failed"
            cd ..
          fi
          
          # Check all possible locations for javadocs
          echo "üîç Checking all possible javadoc locations..."
          find . -name "*apidocs*" -type d 2>/dev/null || echo "No apidocs directories found"
          find . -path "*/target/site*" -type d 2>/dev/null || echo "No target/site directories found"
          
          # Check results and create fallback if needed
          echo "üìä Final check for generated Javadocs:"
          if [ -d "bytehot/target/site/apidocs" ] && [ -n "$(ls -A bytehot/target/site/apidocs 2>/dev/null)" ]; then
            echo "‚úÖ Javadocs generated successfully!"
            echo "Files in apidocs (first 10):"
            ls -la bytehot/target/site/apidocs/ | head -10
            echo "Total files: $(find bytehot/target/site/apidocs -type f | wc -l)"
          else
            echo "‚ùå Javadoc generation failed completely"
            echo "üîß Creating fallback Javadocs..."
            mkdir -p bytehot/target/site/apidocs
            # Create better fallback HTML using echo statements
            echo '<!DOCTYPE html>' > bytehot/target/site/apidocs/index.html
            echo '<html>' >> bytehot/target/site/apidocs/index.html
            echo '<head>' >> bytehot/target/site/apidocs/index.html
            echo '    <title>ByteHot API Documentation</title>' >> bytehot/target/site/apidocs/index.html
            echo '    <style>' >> bytehot/target/site/apidocs/index.html
            echo '        body{font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,sans-serif;line-height:1.6;color:#333;max-width:800px;margin:0 auto;padding:20px}' >> bytehot/target/site/apidocs/index.html
            echo '        .error{color:#d73027;background:#fee;padding:20px;border-radius:8px;margin:20px 0;border-left:4px solid #d73027}' >> bytehot/target/site/apidocs/index.html
            echo '        .info{background:#e7f3ff;padding:20px;border-radius:8px;margin:20px 0;border-left:4px solid #2196F3}' >> bytehot/target/site/apidocs/index.html
            echo '        h1{color:#2c3e50;border-bottom:2px solid #3498db;padding-bottom:10px}' >> bytehot/target/site/apidocs/index.html
            echo '        a{color:#3498db;text-decoration:none}' >> bytehot/target/site/apidocs/index.html
            echo '        a:hover{text-decoration:underline}' >> bytehot/target/site/apidocs/index.html
            echo '    </style>' >> bytehot/target/site/apidocs/index.html
            echo '</head>' >> bytehot/target/site/apidocs/index.html
            echo '<body>' >> bytehot/target/site/apidocs/index.html
            echo '    <h1>ByteHot API Documentation</h1>' >> bytehot/target/site/apidocs/index.html
            echo '    <div class="error">' >> bytehot/target/site/apidocs/index.html
            echo '        <h2>‚ö†Ô∏è Documentation Generation Failed</h2>' >> bytehot/target/site/apidocs/index.html
            echo '        <p>The automated Javadoc generation process encountered issues. This may be due to:</p>' >> bytehot/target/site/apidocs/index.html
            echo '        <ul>' >> bytehot/target/site/apidocs/index.html
            echo '            <li>Strict documentation linting requirements</li>' >> bytehot/target/site/apidocs/index.html
            echo '            <li>Missing documentation comments</li>' >> bytehot/target/site/apidocs/index.html
            echo '            <li>Classpath resolution issues</li>' >> bytehot/target/site/apidocs/index.html
            echo '        </ul>' >> bytehot/target/site/apidocs/index.html
            echo '    </div>' >> bytehot/target/site/apidocs/index.html
            echo '    <div class="info">' >> bytehot/target/site/apidocs/index.html
            echo '        <h3>üìã Alternative Documentation Sources</h3>' >> bytehot/target/site/apidocs/index.html
            echo '        <p>While we work on resolving the Javadoc generation, you can explore:</p>' >> bytehot/target/site/apidocs/index.html
            echo '        <ul>' >> bytehot/target/site/apidocs/index.html
            echo '            <li><a href="../../../index.html">üè† ByteHot Documentation Home</a></li>' >> bytehot/target/site/apidocs/index.html
            echo '            <li><a href="https://github.com/rydnr/bytehot">üìÇ Source Code on GitHub</a></li>' >> bytehot/target/site/apidocs/index.html
            echo '            <li><a href="../../../docs/configuration.html">‚öôÔ∏è Configuration Guide</a></li>' >> bytehot/target/site/apidocs/index.html
            echo '        </ul>' >> bytehot/target/site/apidocs/index.html
            echo '    </div>' >> bytehot/target/site/apidocs/index.html
            echo '    <p><em>This page was generated automatically. Check the <a href="https://github.com/rydnr/bytehot/actions">GitHub Actions logs</a> for more details.</em></p>' >> bytehot/target/site/apidocs/index.html
            echo '</body>' >> bytehot/target/site/apidocs/index.html
            echo '</html>' >> bytehot/target/site/apidocs/index.html
            echo "üìÑ Created fallback documentation page"
          fi

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Prepare documentation files before branch switch
        run: |
          # Create a temporary directory to store generated docs
          mkdir -p /tmp/bytehot-docs
          
          # Find and copy Javadocs from any location
          echo "üîç Searching for generated Javadocs..."
          JAVADOC_PATHS=(
            "bytehot/target/site/apidocs"
            "target/site/apidocs"
            "bytehot/target/apidocs"
            "target/apidocs"
          )
          
          JAVADOCS_FOUND=false
          for path in "${JAVADOC_PATHS[@]}"; do
            if [ -d "$path" ] && [ -n "$(ls -A "$path" 2>/dev/null)" ]; then
              echo "‚úÖ Found Javadocs in: $path"
              cp -r "$path" /tmp/bytehot-docs/javadocs
              JAVADOCS_FOUND=true
              echo "üìã Javadocs directory contents:"
              ls -la /tmp/bytehot-docs/javadocs/ | head -10
              echo "üìä Total files: $(find /tmp/bytehot-docs/javadocs -type f | wc -l)"
              break
            fi
          done
          
          if [ "$JAVADOCS_FOUND" = false ]; then
            echo "‚ùå No Javadocs found in any expected location"
            echo "üîç Searching entire workspace for apidocs..."
            find . -name "*apidocs*" -type d 2>/dev/null | head -5 || echo "No apidocs directories found anywhere"
            
            mkdir -p /tmp/bytehot-docs/javadocs
            echo "üîß Creating placeholder Javadoc index..."
            echo '<!DOCTYPE html>' > /tmp/bytehot-docs/javadocs/index.html
            echo '<html>' >> /tmp/bytehot-docs/javadocs/index.html
            echo '<head><title>ByteHot API Documentation</title></head>' >> /tmp/bytehot-docs/javadocs/index.html
            echo '<body>' >> /tmp/bytehot-docs/javadocs/index.html
            echo '    <h1>ByteHot API Documentation</h1>' >> /tmp/bytehot-docs/javadocs/index.html
            echo '    <p><strong>Note:</strong> Javadocs are being generated. Please check back later or view the source code directly.</p>' >> /tmp/bytehot-docs/javadocs/index.html
            echo '    <p><a href="https://github.com/rydnr/bytehot">View Source Code on GitHub</a></p>' >> /tmp/bytehot-docs/javadocs/index.html
            echo '</body>' >> /tmp/bytehot-docs/javadocs/index.html
            echo '</html>' >> /tmp/bytehot-docs/javadocs/index.html
          fi
          
          # Copy source files for conversion (from root directory)
          echo "üìÅ Copying source files from root directory..."
          echo "üìç Current directory: $(pwd)"
          echo "üìã Files in current directory:"
          ls -la | grep -E '\.(org|md)$|^docs' || echo "No org/md files or docs directory found in current directory"
          
          echo "üîç Looking for files in repository root..."
          ls -la | head -20
          
          # Find and copy story.org
          if [ -f "story.org" ]; then
            cp story.org /tmp/bytehot-docs/
            echo "‚úÖ story.org copied from root"
          elif [ -f "../story.org" ]; then
            cp ../story.org /tmp/bytehot-docs/
            echo "‚úÖ story.org copied from parent directory"
          else
            echo "‚ùå story.org not found in $(pwd) or parent directory"
            echo "üîç Searching for story.org..."
            find . -name "story.org" -type f 2>/dev/null || echo "story.org not found anywhere"
          fi
          
          # Find and copy journal.org
          if [ -f "journal.org" ]; then
            cp journal.org /tmp/bytehot-docs/
            echo "‚úÖ journal.org copied from root"
          elif [ -f "../journal.org" ]; then
            cp ../journal.org /tmp/bytehot-docs/
            echo "‚úÖ journal.org copied from parent directory"
          else
            echo "‚ùå journal.org not found in $(pwd) or parent directory"
            echo "üîç Searching for journal.org..."
            find . -name "journal.org" -type f 2>/dev/null || echo "journal.org not found anywhere"
          fi
          
          # Find and copy docs directory
          if [ -d "docs" ]; then
            cp -r docs /tmp/bytehot-docs/
            echo "‚úÖ docs/ directory copied from root"
          elif [ -d "../docs" ]; then
            cp -r ../docs /tmp/bytehot-docs/
            echo "‚úÖ docs/ directory copied from parent directory"
          else
            echo "‚ùå docs/ directory not found in $(pwd) or parent directory"
            echo "üîç Searching for docs directory..."
            find . -name "docs" -type d 2>/dev/null || echo "docs directory not found anywhere"
          fi
          
          # Also copy specs directory if it exists
          if [ -d "specs" ]; then
            cp -r specs /tmp/bytehot-docs/
            echo "‚úÖ specs/ directory copied from root"
          elif [ -d "../specs" ]; then
            cp -r ../specs /tmp/bytehot-docs/
            echo "‚úÖ specs/ directory copied from parent directory"
          else
            echo "‚ÑπÔ∏è specs/ directory not found (this is optional)"
          fi
          
          echo "üìä Final temp directory contents:"
          ls -la /tmp/bytehot-docs/

      - name: Create or checkout gh-pages branch
        run: |
          # Check if remote gh-pages branch exists
          if git ls-remote --exit-code --heads origin gh-pages > /dev/null 2>&1; then
            echo "Remote gh-pages branch exists, checking out..."
            git fetch origin gh-pages
            git checkout -B gh-pages origin/gh-pages
          else
            echo "Creating new gh-pages branch..."
            git checkout --orphan gh-pages
            # Remove all files more safely
            git reset --hard
            git clean -fd
            # Create initial commit
            echo "# ByteHot Documentation" > README.md
            git add README.md
            git commit -m "üìö Initialize gh-pages branch for documentation"
          fi

      - name: Copy files to gh-pages and convert
        run: |
          # Ensure we're on gh-pages branch (should already be from previous step)
          git checkout gh-pages
          
          # Create bytehot directory
          mkdir -p bytehot
          
          # Copy all prepared documentation from temp directory
          echo "üìÅ Copying documentation from temp directory..."
          cp -r /tmp/bytehot-docs/* bytehot/ 2>/dev/null || echo "Some files could not be copied (this might be normal)"
          
          # List what we have
          echo "üìã Files in bytehot directory after copy:"
          ls -la bytehot/
          
          # Show which org files are available for conversion
          echo "üìÑ Org files available for conversion:"
          find bytehot/ -name "*.org" -type f 2>/dev/null || echo "No .org files found"
          
          # Show which md files are available for conversion
          echo "üìÑ Markdown files available for conversion:"
          find bytehot/ -name "*.md" -type f 2>/dev/null || echo "No .md files found"

      - name: Convert documentation files to HTML
        run: |
          # Create revolutionary ByteHot style.css
          echo "Creating revolutionary ByteHot CSS styling..."
          cat > bytehot/style.css << 'EOF'
/* ByteHot Revolutionary Documentation Styling */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Courier New', 'Monaco', 'Menlo', monospace;
    background: linear-gradient(135deg, #0f0f23 0%, #1a1a3a 50%, #0f0f23 100%);
    color: #00ff00;
    line-height: 1.8;
    min-height: 100vh;
    position: relative;
    overflow-x: hidden;
}

/* Matrix-style background effect */
body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: 
        radial-gradient(circle at 25% 25%, rgba(0, 255, 0, 0.1) 0%, transparent 50%),
        radial-gradient(circle at 75% 75%, rgba(0, 204, 204, 0.1) 0%, transparent 50%);
    z-index: -1;
    animation: matrixGlow 8s ease-in-out infinite;
}

@keyframes matrixGlow {
    0%, 100% { opacity: 0.3; }
    50% { opacity: 0.7; }
}

/* Container for content */
.container, body {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
    background: rgba(26, 26, 58, 0.9);
    border-radius: 12px;
    box-shadow: 0 0 30px rgba(0, 255, 0, 0.2);
    border: 1px solid rgba(0, 255, 0, 0.3);
}

/* Revolutionary navigation */
.navigation {
    background: linear-gradient(45deg, #ff0080, #00ff00, #0080ff);
    background-size: 400% 400%;
    animation: gradientShift 6s ease infinite;
    color: white;
    padding: 1.5rem;
    border-radius: 12px;
    margin-bottom: 3rem;
    box-shadow: 0 0 30px rgba(0, 255, 0, 0.5);
    border: 2px solid #00ff00;
    position: relative;
    overflow: hidden;
}

.navigation::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(15, 15, 35, 0.8);
    z-index: 1;
}

.navigation > * {
    position: relative;
    z-index: 2;
}

@keyframes gradientShift {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}

.navigation strong {
    font-size: 1.4rem;
    text-shadow: 0 0 15px #00ff00;
    display: inline-block;
    margin-right: 1rem;
}

.navigation a {
    color: #00ff00;
    text-decoration: none;
    margin: 0 1rem;
    padding: 0.7rem 1.2rem;
    border: 1px solid #00ff00;
    border-radius: 6px;
    transition: all 0.3s ease;
    font-weight: bold;
    text-transform: uppercase;
    letter-spacing: 1px;
    display: inline-block;
    margin: 0.5rem;
}

.navigation a:hover {
    background: rgba(0, 255, 0, 0.2);
    color: #ffffff;
    box-shadow: 0 0 20px #00ff00;
    transform: translateY(-2px);
    text-shadow: 0 0 10px #00ff00;
}

.navigation a.getting-started {
    background: linear-gradient(45deg, #ff6b00, #ff0080);
    border-color: #ff6b00;
    color: white !important;
    animation: highlight 3s ease-in-out infinite;
}

@keyframes highlight {
    0%, 100% { box-shadow: 0 0 15px #ff6b00; }
    50% { box-shadow: 0 0 30px #ff6b00, 0 0 40px #ff0080; }
}

.navigation a.getting-started:hover {
    background: linear-gradient(45deg, #ff8b20, #ff20a0);
    transform: translateY(-3px) scale(1.05);
    box-shadow: 0 0 35px #ff6b00, 0 0 45px #ff0080;
}

/* Revolutionary headings */
h1, h2, h3, h4, h5, h6 {
    color: #00cccc;
    text-shadow: 0 0 15px #00cccc;
    margin: 2rem 0 1rem 0;
    font-weight: bold;
    position: relative;
}

h1 {
    font-size: 3rem;
    text-align: center;
    border-bottom: 3px solid #00ff00;
    padding-bottom: 1rem;
    margin-bottom: 2rem;
    animation: titleGlow 3s ease-in-out infinite alternate;
}

@keyframes titleGlow {
    from { text-shadow: 0 0 15px #00cccc, 0 0 25px #00cccc; }
    to { text-shadow: 0 0 25px #00cccc, 0 0 35px #00cccc, 0 0 45px #00cccc; }
}

h2 {
    font-size: 2.2rem;
    border-left: 4px solid #00ff00;
    padding-left: 1rem;
    margin-top: 3rem;
}

h3 {
    font-size: 1.8rem;
    color: #ff6b00;
    text-shadow: 0 0 10px #ff6b00;
}

/* Revolutionary code blocks */
code {
    background: rgba(0, 0, 0, 0.7);
    color: #00ff00;
    padding: 0.3rem 0.6rem;
    border-radius: 4px;
    font-family: 'Courier New', monospace;
    border: 1px solid rgba(0, 255, 0, 0.3);
    font-size: 0.9rem;
}

pre {
    background: #000000;
    border: 2px solid #00ff00;
    border-radius: 8px;
    padding: 2rem;
    margin: 2rem 0;
    overflow-x: auto;
    position: relative;
    box-shadow: 0 0 20px rgba(0, 255, 0, 0.3);
}

pre::before {
    content: '‚óâ ‚óâ ‚óâ';
    position: absolute;
    top: 0.5rem;
    left: 1rem;
    color: #ff6b00;
    font-size: 0.8rem;
}

pre code {
    background: transparent;
    border: none;
    padding: 0;
    color: #00ff00;
    display: block;
    margin-top: 1rem;
}

/* Revolutionary tables */
table {
    border-collapse: collapse;
    width: 100%;
    margin: 2rem 0;
    background: rgba(0, 0, 0, 0.5);
    border: 2px solid #00ff00;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 0 20px rgba(0, 255, 0, 0.2);
}

table th, table td {
    border: 1px solid #00ff00;
    padding: 1rem;
    text-align: left;
}

table th {
    background: linear-gradient(45deg, #00ff00, #00cccc);
    color: #000000;
    font-weight: bold;
    text-transform: uppercase;
    letter-spacing: 1px;
    text-shadow: none;
}

table td {
    background: rgba(26, 26, 58, 0.7);
}

table tr:hover td {
    background: rgba(0, 255, 0, 0.1);
}

/* Revolutionary blockquotes */
blockquote {
    border-left: 4px solid #ff6b00;
    margin: 2rem 0;
    padding: 1.5rem 2rem;
    background: rgba(0, 0, 0, 0.4);
    border-radius: 0 8px 8px 0;
    position: relative;
    font-style: italic;
    color: #ffffff;
}

blockquote::before {
    content: '"';
    font-size: 4rem;
    color: #ff6b00;
    position: absolute;
    top: -0.5rem;
    left: 0.5rem;
    opacity: 0.5;
}

/* Revolutionary links */
a {
    color: #00cccc;
    text-decoration: none;
    transition: all 0.3s ease;
    border-bottom: 1px solid transparent;
}

a:hover {
    color: #ffffff;
    text-shadow: 0 0 10px #00cccc;
    border-bottom: 1px solid #00cccc;
}

/* Revolutionary lists */
ul, ol {
    margin: 1rem 0;
    padding-left: 2rem;
}

li {
    margin: 0.5rem 0;
    position: relative;
}

ul li::before {
    content: '‚ñ∂';
    color: #00ff00;
    font-weight: bold;
    position: absolute;
    left: -1.5rem;
}

/* Flow grid system */
.flow-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 2rem;
    margin: 3rem 0;
}

.flow-card {
    background: rgba(26, 26, 58, 0.8);
    border: 2px solid #00ff00;
    border-radius: 12px;
    padding: 2rem;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}

.flow-card::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(45deg, transparent, rgba(0, 255, 0, 0.1), transparent);
    transform: rotate(45deg);
    transition: all 0.5s ease;
    opacity: 0;
}

.flow-card:hover::before {
    opacity: 1;
    transform: rotate(45deg) translate(50%, 50%);
}

.flow-card:hover {
    transform: translateY(-5px) scale(1.02);
    box-shadow: 0 15px 40px rgba(0, 255, 0, 0.4);
    border-color: #00cccc;
}

.flow-card h3 {
    margin-top: 0;
    margin-bottom: 1rem;
    position: relative;
    z-index: 1;
}

.flow-card h3 a {
    text-decoration: none;
    color: #00cccc;
}

.flow-card h3 a:hover {
    color: #ffffff;
    text-shadow: 0 0 15px #00cccc;
}

.flow-card p {
    color: #ffffff;
    line-height: 1.6;
    position: relative;
    z-index: 1;
}

/* Revolutionary paragraphs */
p {
    margin: 1.5rem 0;
    color: #ffffff;
}

/* Terminal-style elements */
.terminal {
    background: #000000;
    border: 2px solid #00ff00;
    border-radius: 8px;
    padding: 1.5rem;
    margin: 2rem 0;
    font-family: 'Courier New', monospace;
    position: relative;
    box-shadow: 0 0 20px rgba(0, 255, 0, 0.3);
}

.terminal::before {
    content: '$ ';
    color: #00cccc;
    font-weight: bold;
}

/* Responsive design */
@media (max-width: 768px) {
    body, .container {
        padding: 1rem;
    }
    
    h1 {
        font-size: 2rem;
    }
    
    h2 {
        font-size: 1.6rem;
    }
    
    .navigation {
        padding: 1rem;
        text-align: center;
    }
    
    .navigation a {
        display: block;
        margin: 0.3rem;
        font-size: 0.9rem;
    }
    
    .flow-grid {
        grid-template-columns: 1fr;
        gap: 1.5rem;
    }
    
    pre {
        padding: 1rem;
        font-size: 0.8rem;
    }
}

/* Special revolutionary elements */
.revolutionary-banner {
    background: linear-gradient(45deg, #ff0080, #00ff00, #0080ff);
    background-size: 400% 400%;
    animation: gradientShift 4s ease infinite;
    padding: 2rem;
    text-align: center;
    margin: 3rem 0;
    border-radius: 12px;
    position: relative;
    overflow: hidden;
    border: 2px solid #00ff00;
}

.revolutionary-banner::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(15, 15, 35, 0.8);
}

.revolutionary-banner * {
    position: relative;
    z-index: 1;
    color: #ffffff;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);
}

/* Animation for revolutionary elements */
@keyframes revolutionaryPulse {
    0%, 100% { opacity: 0.8; }
    50% { opacity: 1; }
}

.revolutionary {
    animation: revolutionaryPulse 2s ease-in-out infinite;
}

/* Scrollbar styling */
::-webkit-scrollbar {
    width: 12px;
}

::-webkit-scrollbar-track {
    background: #0f0f23;
}

::-webkit-scrollbar-thumb {
    background: linear-gradient(45deg, #00ff00, #00cccc);
    border-radius: 6px;
}

::-webkit-scrollbar-thumb:hover {
    background: linear-gradient(45deg, #00cccc, #ff6b00);
}
EOF
          
          # Convert story.org to index.html with navigation (check if file exists in bytehot directory)
          if [ -f "bytehot/story.org" ]; then
            pandoc -f org -t html5 -s --css=style.css --toc bytehot/story.org -o bytehot/index.html --metadata title="ByteHot - Revolutionary JVM Hot-Swapping Agent" || echo "story.org conversion failed, using fallback"
          else
            echo "story.org not found in bytehot directory, creating fallback index.html"
            echo "<html><head><title>ByteHot Documentation</title><link rel='stylesheet' href='style.css'></head><body><h1>ByteHot Documentation</h1><p>Documentation generation in progress...</p></body></html>" > bytehot/index.html
          fi
          
          # Add navigation to index.html if conversion succeeded
          if [ -f bytehot/index.html ]; then
            # Create temp file with navigation using echo
            echo '<div class="navigation">' > temp_nav.html
            echo '  <strong>ByteHot Documentation</strong> |' >> temp_nav.html
            echo '  <a href="index.html">üè† Home</a>' >> temp_nav.html
            echo '  <a href="GETTING_STARTED.html" class="getting-started">üöÄ Getting Started</a>' >> temp_nav.html
            echo '  <a href="implementation.html">‚öôÔ∏è Implementation</a>' >> temp_nav.html
            echo '  <a href="specs/README.html">üìã Specifications</a>' >> temp_nav.html
            echo '  <a href="javadocs/index.html">üìñ API Docs</a>' >> temp_nav.html
            echo '  <a href="journal.html">üìù Journal</a>' >> temp_nav.html
            echo '  <a href="docs/configuration.html">üîß Config</a>' >> temp_nav.html
            echo '  <a href="docs/flows/index.html">üîÑ Flows</a>' >> temp_nav.html
            echo '  <a href="https://github.com/rydnr/bytehot">üîó GitHub</a>' >> temp_nav.html
            echo '</div>' >> temp_nav.html
            # Insert navigation after <body> tag
            sed -i '/<body>/r temp_nav.html' bytehot/index.html
            rm temp_nav.html
          fi
          
          # Convert journal.org to journal.html
          if [ -f "bytehot/journal.org" ]; then
            pandoc -f org -t html5 -s --css=style.css --toc bytehot/journal.org -o bytehot/journal.html --metadata title="ByteHot Development Journal" || echo "journal.org conversion failed"
          else
            echo "journal.org not found, creating fallback"
            echo "<html><head><title>ByteHot Development Journal</title><link rel='stylesheet' href='style.css'></head><body><h1>Development Journal</h1><p>Journal content not available</p></body></html>" > bytehot/journal.html
          fi
          
          # Convert docs/*.org files if they exist
          mkdir -p bytehot/docs bytehot/docs/flows bytehot/specs
          
          # Convert documentation files
          if [ -d "bytehot/docs" ]; then
            echo "üìÑ Converting docs/*.org and *.md files..."
            for file in bytehot/docs/*.org bytehot/docs/*.md; do
              if [ -f "$file" ]; then
                basename=$(basename "$file" .org)
                basename=$(basename "$basename" .md)
                echo "Converting: $file -> bytehot/docs/${basename}.html"
                if [[ "$file" == *.org ]]; then
                  pandoc -f org -t html5 -s --css=../style.css --toc "$file" -o "bytehot/docs/${basename}.html" || echo "Failed to convert $file"
                else
                  pandoc -f markdown -t html5 -s --css=../style.css --toc "$file" -o "bytehot/docs/${basename}.html" || echo "Failed to convert $file"
                fi
              fi
            done
          fi
          
          # Convert flow documentation
          if [ -d "bytehot/docs/flows" ]; then
            echo "üìÑ Converting docs/flows/*.org files..."
            for file in bytehot/docs/flows/*.org; do
              if [ -f "$file" ]; then
                basename=$(basename "$file" .org)
                echo "Converting flow: $file -> bytehot/docs/flows/${basename}.html"
                pandoc -f org -t html5 -s --css=../../style.css --toc "$file" -o "bytehot/docs/flows/${basename}.html" || echo "Failed to convert $file"
              fi
            done
            
            # Create flows index page
            echo "üìÑ Creating flows index page..."
            echo '<!DOCTYPE html>' > bytehot/docs/flows/index.html
            echo '<html>' >> bytehot/docs/flows/index.html
            echo '<head>' >> bytehot/docs/flows/index.html
            echo '    <title>ByteHot Process Flows</title>' >> bytehot/docs/flows/index.html
            echo '    <link rel="stylesheet" href="../../style.css">' >> bytehot/docs/flows/index.html
            echo '</head>' >> bytehot/docs/flows/index.html
            echo '<body>' >> bytehot/docs/flows/index.html
            echo '    <div class="navigation">' >> bytehot/docs/flows/index.html
            echo '        <strong>ByteHot Documentation</strong> |' >> bytehot/docs/flows/index.html
            echo '        <a href="../../index.html">üè† Home</a>' >> bytehot/docs/flows/index.html
            echo '        <a href="../../GETTING_STARTED.html" class="getting-started">üöÄ Getting Started</a>' >> bytehot/docs/flows/index.html
            echo '        <a href="../../implementation.html">‚öôÔ∏è Implementation</a>' >> bytehot/docs/flows/index.html
            echo '        <a href="../../specs/README.html">üìã Specifications</a>' >> bytehot/docs/flows/index.html
            echo '        <a href="../../javadocs/index.html">üìñ API Docs</a>' >> bytehot/docs/flows/index.html
            echo '        <a href="../../journal.html">üìù Journal</a>' >> bytehot/docs/flows/index.html
            echo '        <a href="../configuration.html">üîß Config</a>' >> bytehot/docs/flows/index.html
            echo '        <a href="index.html">üîÑ Flows</a>' >> bytehot/docs/flows/index.html
            echo '        <a href="https://github.com/rydnr/bytehot">üîó GitHub</a>' >> bytehot/docs/flows/index.html
            echo '    </div>' >> bytehot/docs/flows/index.html
            echo '    <h1>ByteHot Process Flows</h1>' >> bytehot/docs/flows/index.html
            echo '    <p>This section documents the key process flows in the ByteHot system, showing how different components interact during various operations.</p>' >> bytehot/docs/flows/index.html
            echo '    <div class="flow-grid">' >> bytehot/docs/flows/index.html
            echo '        <div class="flow-card">' >> bytehot/docs/flows/index.html
            echo '            <h3><a href="agent-startup-flow.html">üöÄ Agent Startup Flow</a></h3>' >> bytehot/docs/flows/index.html
            echo '            <p>Documents the JVM agent initialization process, from attachment to ready state.</p>' >> bytehot/docs/flows/index.html
            echo '        </div>' >> bytehot/docs/flows/index.html
            echo '        <div class="flow-card">' >> bytehot/docs/flows/index.html
            echo '            <h3><a href="error-recovery-flow.html">‚ùå Error Recovery Flow</a></h3>' >> bytehot/docs/flows/index.html
            echo '            <p>Describes error handling and recovery procedures for various failure scenarios.</p>' >> bytehot/docs/flows/index.html
            echo '        </div>' >> bytehot/docs/flows/index.html
            echo '        <div class="flow-card">' >> bytehot/docs/flows/index.html
            echo '            <h3><a href="framework-integration-flow.html">üîß Framework Integration Flow</a></h3>' >> bytehot/docs/flows/index.html
            echo '            <p>Shows how ByteHot integrates with external frameworks and libraries.</p>' >> bytehot/docs/flows/index.html
            echo '        </div>' >> bytehot/docs/flows/index.html
            echo '        <div class="flow-card">' >> bytehot/docs/flows/index.html
            echo '            <h3><a href="hot-swap-complete-flow.html">üîÑ Hot-Swap Complete Flow</a></h3>' >> bytehot/docs/flows/index.html
            echo '            <p>Complete lifecycle of a hot-swap operation from file change to completion.</p>' >> bytehot/docs/flows/index.html
            echo '        </div>' >> bytehot/docs/flows/index.html
            echo '        <div class="flow-card">' >> bytehot/docs/flows/index.html
            echo '            <h3><a href="rollback-coordination-flow.html">üîô Rollback Coordination Flow</a></h3>' >> bytehot/docs/flows/index.html
            echo '            <p>Rollback and recovery coordination when hot-swap operations fail.</p>' >> bytehot/docs/flows/index.html
            echo '        </div>' >> bytehot/docs/flows/index.html
            echo '        <div class="flow-card">' >> bytehot/docs/flows/index.html
            echo '            <h3><a href="user-management-flow.html">üë§ User Management Flow</a></h3>' >> bytehot/docs/flows/index.html
            echo '            <p>User lifecycle and session management throughout the system.</p>' >> bytehot/docs/flows/index.html
            echo '        </div>' >> bytehot/docs/flows/index.html
            echo '    </div>' >> bytehot/docs/flows/index.html
            echo '</body>' >> bytehot/docs/flows/index.html
            echo '</html>' >> bytehot/docs/flows/index.html
          fi
          
          # Convert specs documentation
          if [ -d "bytehot/specs" ]; then
            echo "üìÑ Converting specs/*.md files..."
            for file in bytehot/specs/*.md; do
              if [ -f "$file" ]; then
                basename=$(basename "$file" .md)
                echo "Converting spec: $file -> bytehot/specs/${basename}.html"
                pandoc -f markdown -t html5 -s --css=../style.css --toc "$file" -o "bytehot/specs/${basename}.html" || echo "Failed to convert $file"
              fi
            done
          fi
          
          # Create Implementation index page
          echo "üìÑ Creating implementation index page..."
          echo '<!DOCTYPE html>' > bytehot/implementation.html
          echo '<html>' >> bytehot/implementation.html
          echo '<head>' >> bytehot/implementation.html
          echo '    <title>ByteHot Implementation - Literate Programming Documentation</title>' >> bytehot/implementation.html
          echo '    <link rel="stylesheet" href="style.css">' >> bytehot/implementation.html
          echo '</head>' >> bytehot/implementation.html
          echo '<body>' >> bytehot/implementation.html
          echo '    <div class="navigation">' >> bytehot/implementation.html
          echo '        <strong>ByteHot Documentation</strong> |' >> bytehot/implementation.html
          echo '        <a href="index.html">üè† Home</a>' >> bytehot/implementation.html
          echo '        <a href="GETTING_STARTED.html" class="getting-started">üöÄ Getting Started</a>' >> bytehot/implementation.html
          echo '        <a href="implementation.html">‚öôÔ∏è Implementation</a>' >> bytehot/implementation.html
          echo '        <a href="specs/README.html">üìã Specifications</a>' >> bytehot/implementation.html
          echo '        <a href="javadocs/index.html">üìñ API Docs</a>' >> bytehot/implementation.html
          echo '        <a href="journal.html">üìù Journal</a>' >> bytehot/implementation.html
          echo '        <a href="docs/configuration.html">üîß Config</a>' >> bytehot/implementation.html
          echo '        <a href="docs/flows/index.html">üîÑ Flows</a>' >> bytehot/implementation.html
          echo '        <a href="https://github.com/rydnr/bytehot">üîó GitHub</a>' >> bytehot/implementation.html
          echo '    </div>' >> bytehot/implementation.html
          echo '    <h1>ByteHot Implementation</h1>' >> bytehot/implementation.html
          echo '    <p class="revolutionary-banner">üî• Revolutionary Literate Programming Documentation üî•</p>' >> bytehot/implementation.html
          echo '    <p>This section contains comprehensive literate programming documentation for all ByteHot components, following Domain-Driven Design principles and hexagonal architecture patterns.</p>' >> bytehot/implementation.html
          echo '    ' >> bytehot/implementation.html
          echo '    <h2>üèóÔ∏è Core Architecture</h2>' >> bytehot/implementation.html
          echo '    <div class="flow-grid">' >> bytehot/implementation.html
          echo '        <div class="flow-card">' >> bytehot/implementation.html
          echo '            <h3><a href="ByteHot.html">üéØ ByteHot Core</a></h3>' >> bytehot/implementation.html
          echo '            <p>Main domain aggregate managing hot-swap operations and system coordination.</p>' >> bytehot/implementation.html
          echo '        </div>' >> bytehot/implementation.html
          echo '        <div class="flow-card">' >> bytehot/implementation.html
          echo '            <h3><a href="ByteHotApplication.html">üì± Application Layer</a></h3>' >> bytehot/implementation.html
          echo '            <p>Application coordination and event routing for the entire system.</p>' >> bytehot/implementation.html
          echo '        </div>' >> bytehot/implementation.html
          echo '        <div class="flow-card">' >> bytehot/implementation.html
          echo '            <h3><a href="HandlesByteHotAttached.html">üîó Attachment Handler</a></h3>' >> bytehot/implementation.html
          echo '            <p>Interface for handling JVM agent attachment requests and initialization.</p>' >> bytehot/implementation.html
          echo '        </div>' >> bytehot/implementation.html
          echo '        <div class="flow-card">' >> bytehot/implementation.html
          echo '            <h3><a href="Ports.html">üö™ Ports System</a></h3>' >> bytehot/implementation.html
          echo '            <p>Dependency injection and port resolution for hexagonal architecture.</p>' >> bytehot/implementation.html
          echo '        </div>' >> bytehot/implementation.html
          echo '    </div>' >> bytehot/implementation.html
          echo '    ' >> bytehot/implementation.html
          echo '    <h2>üé≠ Domain Layer</h2>' >> bytehot/implementation.html
          echo '    <div class="flow-grid">' >> bytehot/implementation.html
          echo '        <div class="flow-card">' >> bytehot/implementation.html
          echo '            <h3><a href="User.html">üë§ User Management</a></h3>' >> bytehot/implementation.html
          echo '            <p>User aggregate with session management and authentication.</p>' >> bytehot/implementation.html
          echo '        </div>' >> bytehot/implementation.html
          echo '        <div class="flow-card">' >> bytehot/implementation.html
          echo '            <h3><a href="InstanceTracker.html">üìä Instance Tracking</a></h3>' >> bytehot/implementation.html
          echo '            <p>Object instance management and state preservation during hot-swaps.</p>' >> bytehot/implementation.html
          echo '        </div>' >> bytehot/implementation.html
          echo '        <div class="flow-card">' >> bytehot/implementation.html
          echo '            <h3><a href="ErrorHandler.html">üõ°Ô∏è Error Handling</a></h3>' >> bytehot/implementation.html
          echo '            <p>Comprehensive error management and recovery strategies.</p>' >> bytehot/implementation.html
          echo '        </div>' >> bytehot/implementation.html
          echo '        <div class="flow-card">' >> bytehot/implementation.html
          echo '            <h3><a href="FrameworkIntegration.html">üîß Framework Integration</a></h3>' >> bytehot/implementation.html
          echo '            <p>Integration patterns for external frameworks and libraries.</p>' >> bytehot/implementation.html
          echo '        </div>' >> bytehot/implementation.html
          echo '    </div>' >> bytehot/implementation.html
          echo '    ' >> bytehot/implementation.html
          echo '    <h2>üîå Ports & Adapters</h2>' >> bytehot/implementation.html
          echo '    <div class="flow-grid">' >> bytehot/implementation.html
          echo '        <div class="flow-card">' >> bytehot/implementation.html
          echo '            <h3><a href="InstrumentationPort.html">üîß Instrumentation Port</a></h3>' >> bytehot/implementation.html
          echo '            <p>Domain interface for JVM instrumentation operations.</p>' >> bytehot/implementation.html
          echo '        </div>' >> bytehot/implementation.html
          echo '        <div class="flow-card">' >> bytehot/implementation.html
          echo '            <h3><a href="InstrumentationAdapter.html">‚öôÔ∏è Instrumentation Adapter</a></h3>' >> bytehot/implementation.html
          echo '            <p>Infrastructure implementation of JVM instrumentation capabilities.</p>' >> bytehot/implementation.html
          echo '        </div>' >> bytehot/implementation.html
          echo '        <div class="flow-card">' >> bytehot/implementation.html
          echo '            <h3><a href="FileWatcherPort.html">üëÅÔ∏è File Watcher Port</a></h3>' >> bytehot/implementation.html
          echo '            <p>Domain interface for file system monitoring operations.</p>' >> bytehot/implementation.html
          echo '        </div>' >> bytehot/implementation.html
          echo '        <div class="flow-card">' >> bytehot/implementation.html
          echo '            <h3><a href="FileWatcherAdapter.html">üìÅ File Watcher Adapter</a></h3>' >> bytehot/implementation.html
          echo '            <p>Infrastructure implementation of file system monitoring.</p>' >> bytehot/implementation.html
          echo '        </div>' >> bytehot/implementation.html
          echo '    </div>' >> bytehot/implementation.html
          echo '    ' >> bytehot/implementation.html
          echo '    <h2>‚ö° Events & Messaging</h2>' >> bytehot/implementation.html
          echo '    <div class="flow-grid">' >> bytehot/implementation.html
          echo '        <div class="flow-card">' >> bytehot/implementation.html
          echo '            <h3><a href="events/ByteHotAttachRequested.html">üîó Attach Requested</a></h3>' >> bytehot/implementation.html
          echo '            <p>Event triggered when JVM agent attachment is requested.</p>' >> bytehot/implementation.html
          echo '        </div>' >> bytehot/implementation.html
          echo '        <div class="flow-card">' >> bytehot/implementation.html
          echo '            <h3><a href="events/ClassFileChanged.html">üìù Class File Changed</a></h3>' >> bytehot/implementation.html
          echo '            <p>Event triggered when a class file is modified on disk.</p>' >> bytehot/implementation.html
          echo '        </div>' >> bytehot/implementation.html
          echo '        <div class="flow-card">' >> bytehot/implementation.html
          echo '            <h3><a href="events/HotSwapRequested.html">üîÑ Hot-Swap Requested</a></h3>' >> bytehot/implementation.html
          echo '            <p>Event triggered when a hot-swap operation is initiated.</p>' >> bytehot/implementation.html
          echo '        </div>' >> bytehot/implementation.html
          echo '        <div class="flow-card">' >> bytehot/implementation.html
          echo '            <h3><a href="events/UserSessionStarted.html">üë§ User Session Started</a></h3>' >> bytehot/implementation.html
          echo '            <p>Event triggered when a user session is established.</p>' >> bytehot/implementation.html
          echo '        </div>' >> bytehot/implementation.html
          echo '    </div>' >> bytehot/implementation.html
          echo '    ' >> bytehot/implementation.html
          echo '    <h2>üìä Advanced Components</h2>' >> bytehot/implementation.html
          echo '    <div class="flow-grid">' >> bytehot/implementation.html
          echo '        <div class="flow-card">' >> bytehot/implementation.html
          echo '            <h3><a href="RollbackManager.html">‚Ü©Ô∏è Rollback Management</a></h3>' >> bytehot/implementation.html
          echo '            <p>Sophisticated rollback and recovery coordination system.</p>' >> bytehot/implementation.html
          echo '        </div>' >> bytehot/implementation.html
          echo '        <div class="flow-card">' >> bytehot/implementation.html
          echo '            <h3><a href="StatePreserver.html">üíæ State Preservation</a></h3>' >> bytehot/implementation.html
          echo '            <p>Object state preservation and restoration during redefinitions.</p>' >> bytehot/implementation.html
          echo '        </div>' >> bytehot/implementation.html
          echo '        <div class="flow-card">' >> bytehot/implementation.html
          echo '            <h3><a href="ErrorRecoveryManager.html">üöë Error Recovery</a></h3>' >> bytehot/implementation.html
          echo '            <p>Automated error recovery and system resilience management.</p>' >> bytehot/implementation.html
          echo '        </div>' >> bytehot/implementation.html
          echo '        <div class="flow-card">' >> bytehot/implementation.html
          echo '            <h3><a href="Flow.html">üåä Flow Detection</a></h3>' >> bytehot/implementation.html
          echo '            <p>Dynamic process flow discovery and documentation system.</p>' >> bytehot/implementation.html
          echo '        </div>' >> bytehot/implementation.html
          echo '    </div>' >> bytehot/implementation.html
          echo '    ' >> bytehot/implementation.html
          echo '    <div class="revolutionary-banner">' >> bytehot/implementation.html
          echo '        <h2>üé® Revolutionary Architecture</h2>' >> bytehot/implementation.html
          echo '        <p>ByteHot'"'"'s literate programming approach combines Domain-Driven Design with hexagonal architecture, creating a self-documenting system where code and documentation evolve together in perfect harmony.</p>' >> bytehot/implementation.html
          echo '    </div>' >> bytehot/implementation.html
          echo '    ' >> bytehot/implementation.html
          echo '    <h2>üìñ Documentation Principles</h2>' >> bytehot/implementation.html
          echo '    <p>All implementation documentation follows strict literate programming principles:</p>' >> bytehot/implementation.html
          echo '    <ul>' >> bytehot/implementation.html
          echo '        <li><strong>Invariant Documentation:</strong> Each class documents its assumptions and guarantees</li>' >> bytehot/implementation.html
          echo '        <li><strong>Behavior Documentation:</strong> Complete explanation of class responsibilities and collaborations</li>' >> bytehot/implementation.html
          echo '        <li><strong>Architecture Compliance:</strong> Strict adherence to hexagonal architecture boundaries</li>' >> bytehot/implementation.html
          echo '        <li><strong>Code Tangling:</strong> Documentation fragments that generate actual implementation</li>' >> bytehot/implementation.html
          echo '        <li><strong>Living Documentation:</strong> Documentation that evolves with the codebase</li>' >> bytehot/implementation.html
          echo '    </ul>' >> bytehot/implementation.html
          echo '</body>' >> bytehot/implementation.html
          echo '</html>' >> bytehot/implementation.html

      - name: Create site README
        run: |
          # Create comprehensive README.md for the documentation site
          echo "# ByteHot Documentation Site" > bytehot/README.md
          echo "" >> bytehot/README.md
          echo "Welcome to the comprehensive documentation for **ByteHot** - the revolutionary JVM agent that enables real-time bytecode hot-swapping during application runtime." >> bytehot/README.md
          echo "" >> bytehot/README.md
          echo "## üöÄ Quick Start" >> bytehot/README.md
          echo "" >> bytehot/README.md
          echo "- **[üìñ Start Here - ByteHot Story](index.html)** - Complete project vision, architecture, and development philosophy" >> bytehot/README.md
          echo "- **[üìã Project Specifications](specs/README.html)** - Milestone specifications and technical requirements" >> bytehot/README.md
          echo "- **[‚öôÔ∏è Configuration Guide](docs/configuration.html)** - Get up and running with ByteHot in minutes" >> bytehot/README.md
          echo "- **[üìñ API Reference](javadocs/index.html)** - Complete Javadoc documentation for developers" >> bytehot/README.md
          echo "" >> bytehot/README.md
          echo "## üìö Documentation Sections" >> bytehot/README.md
          echo "" >> bytehot/README.md
          echo "### Core Documentation" >> bytehot/README.md
          echo "- **[üè† Home - Project Story](index.html)** - Vision, goals, and architectural overview" >> bytehot/README.md
          echo "- **[üìù Development Journal](journal.html)** - Detailed development history and technical decisions" >> bytehot/README.md
          echo "- **[‚öôÔ∏è Configuration Reference](docs/configuration.html)** - Complete setup and configuration guide" >> bytehot/README.md
          echo "" >> bytehot/README.md
          echo "### Project Specifications" >> bytehot/README.md
          echo "- **[üìã Specifications Overview](specs/README.html)** - Complete project specifications index" >> bytehot/README.md
          echo "- **[üîÑ CI/CD Pipeline](specs/github-actions-cicd.html)** - GitHub Actions automation specifications" >> bytehot/README.md
          echo "- **[üìÅ File System Monitoring](specs/milestone-1-file-system-monitoring.html)** - Milestone 1 specifications" >> bytehot/README.md
          echo "- **[üîç Bytecode Analysis](specs/milestone-2-bytecode-analysis.html)** - Milestone 2 specifications" >> bytehot/README.md
          echo "- **[üîÑ Hot-Swap Operations](specs/milestone-3-hotswap-operations.html)** - Milestone 3 specifications" >> bytehot/README.md
          echo "- **[üì¶ Instance Management](specs/milestone-4-instance-management.html)** - Milestone 4 specifications" >> bytehot/README.md
          echo "- **[üß™ Integration Testing](specs/milestone-5-integration-testing.html)** - Milestone 5 specifications" >> bytehot/README.md
          echo "- **[üìä Event Sourcing](specs/milestone-6a-basic-eventsourcing.html)** - Milestone 6A specifications" >> bytehot/README.md
          echo "- **[üß™ Event-Driven Testing](specs/milestone-6b-event-driven-testing.html)** - Milestone 6B specifications" >> bytehot/README.md
          echo "- **[üë§ User Management](specs/milestone-6c-user-management.html)** - Milestone 6C specifications" >> bytehot/README.md
          echo "- **[üöÄ GitHub Actions CI/CD](specs/milestone-6e-github-actions-setup.html)** - Milestone 6E specifications" >> bytehot/README.md
          echo "" >> bytehot/README.md
          echo "### API & Architecture" >> bytehot/README.md
          echo "- **[üìñ API Documentation](javadocs/index.html)** - Complete Javadoc API reference" >> bytehot/README.md
          echo "- **[üë§ User Management](docs/User.html)** - User aggregate and domain model documentation" >> bytehot/README.md
          echo "" >> bytehot/README.md
          echo "### Process Flows" >> bytehot/README.md
          echo "- **[üöÄ Agent Startup Flow](docs/flows/agent-startup-flow.html)** - JVM agent initialization process" >> bytehot/README.md
          echo "- **[‚ùå Error Recovery Flow](docs/flows/error-recovery-flow.html)** - Error handling and recovery procedures" >> bytehot/README.md
          echo "- **[üîß Framework Integration Flow](docs/flows/framework-integration-flow.html)** - Integration with external frameworks" >> bytehot/README.md
          echo "- **[üîÑ Hot-Swap Complete Flow](docs/flows/hot-swap-complete-flow.html)** - Complete hot-swap operation lifecycle" >> bytehot/README.md
          echo "- **[üîô Rollback Coordination Flow](docs/flows/rollback-coordination-flow.html)** - Rollback and recovery coordination" >> bytehot/README.md
          echo "- **[üë§ User Management Flow](docs/flows/user-management-flow.html)** - User lifecycle and session management" >> bytehot/README.md
          echo "" >> bytehot/README.md
          echo "## üèóÔ∏è Site Structure" >> bytehot/README.md
          echo "" >> bytehot/README.md
          echo "\`\`\`" >> bytehot/README.md
          echo "bytehot-docs/" >> bytehot/README.md
          echo "‚îú‚îÄ‚îÄ index.html              # Main documentation hub" >> bytehot/README.md
          echo "‚îú‚îÄ‚îÄ journal.html            # Development journal" >> bytehot/README.md
          echo "‚îú‚îÄ‚îÄ style.css               # Site styling" >> bytehot/README.md
          echo "‚îú‚îÄ‚îÄ javadocs/               # API documentation" >> bytehot/README.md
          echo "‚îÇ   ‚îî‚îÄ‚îÄ index.html" >> bytehot/README.md
          echo "‚îú‚îÄ‚îÄ specs/                  # Project specifications" >> bytehot/README.md
          echo "‚îÇ   ‚îú‚îÄ‚îÄ README.html         # Specifications overview" >> bytehot/README.md
          echo "‚îÇ   ‚îú‚îÄ‚îÄ github-actions-cicd.html" >> bytehot/README.md
          echo "‚îÇ   ‚îú‚îÄ‚îÄ milestone-1-file-system-monitoring.html" >> bytehot/README.md
          echo "‚îÇ   ‚îú‚îÄ‚îÄ milestone-2-bytecode-analysis.html" >> bytehot/README.md
          echo "‚îÇ   ‚îú‚îÄ‚îÄ milestone-3-hotswap-operations.html" >> bytehot/README.md
          echo "‚îÇ   ‚îú‚îÄ‚îÄ milestone-4-instance-management.html" >> bytehot/README.md
          echo "‚îÇ   ‚îú‚îÄ‚îÄ milestone-5-integration-testing.html" >> bytehot/README.md
          echo "‚îÇ   ‚îú‚îÄ‚îÄ milestone-6a-basic-eventsourcing.html" >> bytehot/README.md
          echo "‚îÇ   ‚îú‚îÄ‚îÄ milestone-6b-event-driven-testing.html" >> bytehot/README.md
          echo "‚îÇ   ‚îú‚îÄ‚îÄ milestone-6c-user-management.html" >> bytehot/README.md
          echo "‚îÇ   ‚îî‚îÄ‚îÄ milestone-6e-github-actions-setup.html" >> bytehot/README.md
          echo "‚îú‚îÄ‚îÄ docs/" >> bytehot/README.md
          echo "‚îÇ   ‚îú‚îÄ‚îÄ configuration.html  # Configuration guide" >> bytehot/README.md
          echo "‚îÇ   ‚îú‚îÄ‚îÄ User.html          # User domain model" >> bytehot/README.md
          echo "‚îÇ   ‚îî‚îÄ‚îÄ flows/             # Process flows" >> bytehot/README.md
          echo "‚îÇ       ‚îú‚îÄ‚îÄ agent-startup-flow.html" >> bytehot/README.md
          echo "‚îÇ       ‚îú‚îÄ‚îÄ error-recovery-flow.html" >> bytehot/README.md
          echo "‚îÇ       ‚îú‚îÄ‚îÄ framework-integration-flow.html" >> bytehot/README.md
          echo "‚îÇ       ‚îú‚îÄ‚îÄ hot-swap-complete-flow.html" >> bytehot/README.md
          echo "‚îÇ       ‚îú‚îÄ‚îÄ rollback-coordination-flow.html" >> bytehot/README.md
          echo "‚îÇ       ‚îî‚îÄ‚îÄ user-management-flow.html" >> bytehot/README.md
          echo "‚îî‚îÄ‚îÄ README.md              # This file" >> bytehot/README.md
          echo "\`\`\`" >> bytehot/README.md
          echo "" >> bytehot/README.md
          echo "## üöÄ Current Status" >> bytehot/README.md
          echo "" >> bytehot/README.md
          echo "**Implementation Status:** Milestone 6C completed with 159/160 tests passing (99.4% success rate)" >> bytehot/README.md
          echo "" >> bytehot/README.md
          echo "### ‚úÖ Completed Features" >> bytehot/README.md
          echo "- **EventSourcing Infrastructure** - Complete event persistence and replay" >> bytehot/README.md
          echo "- **User Management Domain** - Auto-discovery, authentication, session tracking" >> bytehot/README.md
          echo "- **Event-Driven Testing** - Revolutionary Given/When/Then framework" >> bytehot/README.md
          echo "- **Hexagonal Architecture** - Clean boundaries with Ports & Adapters" >> bytehot/README.md
          echo "- **Instance Management** - Object state preservation across redefinitions" >> bytehot/README.md
          echo "" >> bytehot/README.md
          echo "### üìã Next Milestones" >> bytehot/README.md
          echo "- **Milestone 6D:** Event-Driven Bug Reporting" >> bytehot/README.md
          echo "- **Milestone 6F:** Flow Detection" >> bytehot/README.md
          echo "- **Milestone 6G:** Java-Commons Refactoring" >> bytehot/README.md
          echo "" >> bytehot/README.md
          echo "## üîó External Links" >> bytehot/README.md
          echo "" >> bytehot/README.md
          echo "- **[GitHub Repository](https://github.com/rydnr/bytehot)** - Source code and development" >> bytehot/README.md
          echo "- **[Issues & Discussions](https://github.com/rydnr/bytehot/issues)** - Bug reports and feature requests" >> bytehot/README.md
          echo "- **[Releases](https://github.com/rydnr/bytehot/releases)** - Download ByteHot releases" >> bytehot/README.md
          echo "" >> bytehot/README.md
          echo "---" >> bytehot/README.md
          echo "" >> bytehot/README.md
          echo "*This documentation site is automatically generated and updated via GitHub Actions.*" >> bytehot/README.md
          echo "" >> bytehot/README.md
          echo "**Last Updated:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> bytehot/README.md

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './bytehot'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-docs
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4