# ByteHot Configuration for E-Commerce Example
version: "1.0"
project: "bytehot-ecommerce-example"

# Watch Configuration
watch:
  paths:
    - path: "src/main/java/org/acmsl/bytehot/examples/ecommerce/service"
      recursive: true
      includes:
        - "*.java"
      excludes:
        - "*Test.java"
    - path: "src/main/java/org/acmsl/bytehot/examples/ecommerce/controller"
      recursive: true
      includes:
        - "*.java"
    - path: "src/main/java/org/acmsl/bytehot/examples/ecommerce/model"
      recursive: true
      includes:
        - "*.java"
  
  # File change detection settings
  polling-interval: 2000  # 2 seconds
  debounce-delay: 500     # 500ms
  
# Hot-Swap Configuration
hotswap:
  enabled: true
  auto-reload: true
  validation:
    enabled: true
    strict-mode: false
  
  # Class loading settings
  class-loading:
    strategy: "isolated"
    preserve-static-state: true
    reload-annotations: true
  
  # Supported operations
  operations:
    - method-body-changes
    - field-additions
    - method-additions
    - annotation-changes

# Production Features Configuration
production:
  error-handling:
    enabled: true
    circuit-breaker:
      enabled: true
      failure-threshold: 5
      timeout: 30000
      recovery-timeout: 60000
    graceful-degradation:
      enabled: true
      fallback-strategies:
        - cache-fallback
        - default-response
  
  performance-monitoring:
    enabled: true
    collection-interval: 15000  # 15 seconds
    metrics:
      - jvm-memory
      - jvm-gc
      - application-performance
      - hot-swap-operations
  
  resource-optimization:
    enabled: true
    memory:
      optimization-threshold: 0.8
      cleanup-strategies:
        - conservative
        - aggressive
    performance:
      auto-tuning: true
      optimization-strategies:
        - method-inlining
        - dead-code-elimination
  
  health-checks:
    enabled: true
    interval: 60000  # 1 minute
    checks:
      - memory
      - cpu
      - disk
      - hot-swap
      - threading

# Integration Configuration
integration:
  spring:
    enabled: true
    auto-configuration: true
    bean-reloading: true
    context-refresh: false  # Use hot-swap instead of context refresh
  
  frameworks:
    - name: "spring-boot"
      version: "2.7.x"
    - name: "hibernate"
      version: "5.6.x"

# Logging Configuration
logging:
  level: INFO
  targets:
    - console
    - file
  file:
    path: "logs/bytehot-ecommerce.log"
    max-size: "10MB"
    max-files: 5
  
  categories:
    hot-swap: DEBUG
    performance: INFO
    errors: WARN

# Development Settings
development:
  demo-mode: true
  sample-data:
    enabled: true
    products:
      - name: "Laptop Pro"
        category: "ELECTRONICS"
        price: 1299.99
        stock: 50
      - name: "Wireless Headphones"
        category: "ELECTRONICS"
        price: 199.99
        stock: 25
      - name: "Cotton T-Shirt"
        category: "CLOTHING"
        price: 29.99
        stock: 100
      - name: "Programming Book"
        category: "BOOKS"
        price: 49.99
        stock: 75