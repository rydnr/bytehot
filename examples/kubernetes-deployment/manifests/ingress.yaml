# ByteHot Kubernetes Deployment - Ingress
# External access configuration for ByteHot applications

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bytehot-app-ingress
  namespace: bytehot
  labels:
    app: bytehot-app
    app.kubernetes.io/name: bytehot-app
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: bytehot-platform
  annotations:
    # NGINX Ingress Controller annotations
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Load balancing for hot-swap coordination
    nginx.ingress.kubernetes.io/load-balance: "round_robin"
    nginx.ingress.kubernetes.io/session-affinity: "cookie"
    nginx.ingress.kubernetes.io/session-affinity-mode: "persistent"
    
    # Custom headers for ByteHot
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-ByteHot-Enabled: true";
      more_set_headers "X-ByteHot-Version: 1.0.0";
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # CORS configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Content-Type, Authorization, X-ByteHot-Operation"
    
    # Health check configuration
    nginx.ingress.kubernetes.io/health-check-path: "/actuator/health"
    nginx.ingress.kubernetes.io/health-check-interval: "30s"
    
    # ByteHot specific annotations
    bytehot.org/ingress-enabled: "true"
    bytehot.org/hot-swap-routing: "enabled"
    
    # TLS configuration
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
    - hosts:
        - bytehot-app.example.com
        - api.bytehot-app.example.com
      secretName: bytehot-tls-secret
  
  rules:
    # Main application
    - host: bytehot-app.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: bytehot-app-service
                port:
                  number: 8080
          
          # Metrics endpoint (protected)
          - path: /actuator
            pathType: Prefix
            backend:
              service:
                name: bytehot-app-service
                port:
                  number: 8080
    
    # API subdomain
    - host: api.bytehot-app.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: bytehot-app-service
                port:
                  number: 8080

---
# Development ingress with additional paths
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bytehot-dev-ingress
  namespace: bytehot
  labels:
    app: bytehot-dev
    app.kubernetes.io/name: bytehot-dev
    app.kubernetes.io/component: development-ingress
    app.kubernetes.io/part-of: bytehot-platform
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"  # Allow HTTP for development
    
    # Development-specific configurations
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    
    # Custom headers for development
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-ByteHot-Environment: development";
      more_set_headers "X-ByteHot-Fast-Reload: enabled";
    
    bytehot.org/development: "true"
    bytehot.org/debug-enabled: "true"
spec:
  rules:
    - host: bytehot-dev.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: bytehot-dev-service
                port:
                  number: 8080
          
          # Debug endpoint (development only)
          - path: /debug
            pathType: Prefix
            backend:
              service:
                name: bytehot-dev-service
                port:
                  number: 5005

---
# Metrics ingress for monitoring
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bytehot-metrics-ingress
  namespace: bytehot
  labels:
    app: bytehot-app
    app.kubernetes.io/name: bytehot-metrics
    app.kubernetes.io/component: metrics-ingress
    app.kubernetes.io/part-of: bytehot-platform
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    
    # Authentication for metrics (basic auth)
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: bytehot-metrics-auth
    nginx.ingress.kubernetes.io/auth-realm: "ByteHot Metrics"
    
    # IP whitelist for metrics access
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,192.168.0.0/16,172.16.0.0/12"
    
    bytehot.org/metrics-ingress: "true"
    bytehot.org/protected: "true"
spec:
  tls:
    - hosts:
        - metrics.bytehot-app.example.com
      secretName: bytehot-metrics-tls
  
  rules:
    - host: metrics.bytehot-app.example.com
      http:
        paths:
          - path: /metrics
            pathType: Prefix
            backend:
              service:
                name: bytehot-app-service
                port:
                  number: 9090
          
          - path: /actuator/prometheus
            pathType: Prefix
            backend:
              service:
                name: bytehot-app-service
                port:
                  number: 8080